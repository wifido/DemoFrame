<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sf.sfpp.user.dao.mapper.ResourceMapper" >
  <resultMap id="RoleResourceResultMap" type="com.sf.sfpp.user.dao.dto.RoleResource" >
    <id column="resource_id" property="resourceId" jdbcType="INTEGER" />
    <result column="parent_id" property="parentId" jdbcType="INTEGER" />
    <result column="resource_type" property="resourceType" jdbcType="VARCHAR" />
    <result column="resource_url" property="resourceUrl" jdbcType="VARCHAR" />
    <result column="resource_name" property="resourceName" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="created_time" property="createdTime" jdbcType="TIMESTAMP" />
    <result column="modified_time" property="modifiedTime" jdbcType="TIMESTAMP" />
    <result column="bindState" property="bindState" jdbcType="BIT" />
  </resultMap>

	<select id="getSubResourceCount" resultType="java.lang.Integer" parameterType="java.lang.String">
		select count(*) from permission_resource sr where sr.parent_id=( select r.resource_id from permission_resource r 
				where r.resource_url = #{parentResUrl, jdbcType=VARCHAR} and r.resource_type='M')
		AND sr.is_deleted='0'
	</select>

	<select id="getSubResource" resultMap="BaseResultMap" parameterType="java.lang.String">
		select 
	    <include refid="Base_Column_List" />
	    from permission_resource sr 
	    where sr.parent_id=(select r.resource_id from permission_resource r 
				where r.resource_url = #{parentResUrl, jdbcType=VARCHAR} and r.resource_type='M')
		AND sr.is_deleted='0'
		<!-- order by sr.resource_id desc -->
	</select>
	
	<select id="getResourceList" resultMap="BaseResultMap">
	select 
    <include refid="Base_Column_List" />
    from permission_resource
    where is_deleted='0'
	</select>

	<delete id="deleteByRoleId" parameterType="java.lang.String">
	delete from permission_role_res_rel where role_id=#{roleId}
	</delete>
	
	<insert id="insertRoleResourceList">
	insert into permission_role_res_rel (role_id, resource_id) values 
	<foreach item="item" collection="resList" separator="," open="" close="" index="">
            (#{roleId}, #{item,jdbcType=INTEGER})
    </foreach>
	</insert>
	
	<select id="selectResourceByUserNo" resultMap="BaseResultMap" parameterType="java.lang.String">
	SELECT *
	FROM permission_resource res
	WHERE res.resource_id IN (
	SELECT rr.resource_id
	FROM permission_user_role_rel ur, permission_role_res_rel rr, permission_user u, permission_role r
	WHERE rr.role_id=ur.role_id AND ur.user_no=#{userNo,jdbcType=VARCHAR} 
	AND u.is_deleted='0' AND u.user_no=ur.user_no 
	AND r.is_deleted='0' AND r.role_id=ur.role_id
	)
	and res.is_deleted='0'
	ORDER BY resource_id
  	</select>
  	
  	<select id="getResourceByRoleId" resultMap="RoleResourceResultMap" parameterType="java.lang.String">
	SELECT <include refid="Base_Column_List" />, CASE WHEN c.roleId IS NULL THEN FALSE ELSE TRUE END AS bindState
	FROM permission_resource res
	LEFT JOIN 
	(
	SELECT rel.role_id roleId, rel.resource_id resourceId
	FROM permission_role_res_rel rel, permission_role r
	WHERE rel.role_id=#{roleId} and r.is_deleted='0' and r.role_id=rel.role_id
	) c 
	ON res.resource_id=c.resourceId
	where res.is_deleted='0'
	order by res.resource_id
  	</select>
</mapper>
